import React, { Component, Fragment } from 'react';
import { Layout, Menu, Icon, message } from 'antd';
import Aside from './Aside';
// redux 
import { bindActionCreators } from 'redux';
import { connect } from 'react-redux';
import * as LayoutActions from '@actions/layout';
import * as typesLogin from '@constants/actions/login';
import LeftNav from './LeftNav';
const { Header, Content } = Layout;
function mapStateToProps(state) {
	return {
		layoutMain: state.layoutMain
	};
}

function mapDispatchToProps(dispatch) {
	return {
		actions: bindActionCreators(LayoutActions, dispatch)
	};
}

// decorator
export default (options = {}, TopNav) => 
	function createDecorator(Left) {
		class LayoutDecorator extends Component {
			constructor() {
				super();
				this.state = {
				// 是否折叠
					collapsed: false
				};
			}
		handleToggle = () => {
			this.setState({
				collapsed: !this.state.collapsed,
			});
		};
		handleSignOut = () => {
			// message.destroy();
			// message.loading('提交中...', 0);

			// let url = typesLogin.LOGIN_OUT_POST;
			// let param = {};

			// let params = {
			// 	param: param,
			// 	ajaxType: 'DELETE',
			// 	onSuccess: (res) => {
			// 		message.destroy();
			// 		// delCookie('userManage');
			// 		_global.history.push('/login');
			// 	},
			// 	onError: (res) => {
			// 		message.destroy();
			// 		message.error(res.msg, 1.5);
			// 	}
			// };
			// // console.log(this.props.actions);
			// this.props.actions.request(url, params, {});
		}
		render() {
			const { location: { pathname }, actions } = this.props;
			const { collapsed } = this.state;
			return (
				<div className="g-reset-antd" style={{ height: _global.innerHeight }}>
					<Layout className="ant-layout-has-sider g-ant-layout">
						<Aside 
							path={pathname} 
							collapsed={false} 
							component={LeftNav} 
							actions={actions}
						/>
						<Layout className="g-ant-layout" id="contents">
							<Header style={{ background: '#fff', padding: 0, height: 80 }} >
								{
									TopNav ?
										<Fragment>
											<TopNav
												collapsed={collapsed}
												onToggle={this.handleToggle}
												onSignOut={this.handleSignOut}
												pathname={pathname}
											/>
											<div className="g-absolute g-c-blue-1"
												style={{ right: 30 }}
											>
												防伪追溯系统
											</div>
										</Fragment>
										: null
								}
								
							</Header>
							<Content 
								style={{ 
									margin: '10px 10px 0 10px', 
									overflow: 'initial',
									 height: _global.innerHeight - 80, 
									 overflow: "auto" }}
							>
								{this.props.children}
							</Content>
						</Layout>
					</Layout>
				</div>
			);
		}
		};
		return connect(mapStateToProps, mapDispatchToProps)(LayoutDecorator);
	};

